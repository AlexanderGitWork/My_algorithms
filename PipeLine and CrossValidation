{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"mount_file_id":"1pdecYG316WS8wQ9LcdmIk2tOTAg8-amI","authorship_tag":"ABX9TyN19d/wn9z1YM5TISlev33/"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"standard"},"cells":[{"cell_type":"markdown","source":["[scikit-learn.ru](https://scikit-learn.ru/6-1-pipelines-and-composite-estimators/)\n"],"metadata":{"id":"pmvAuUk39XjN"}},{"cell_type":"markdown","source":["#PipeLine\n","\n","[Kaggle](https://www.kaggle.com/code/luxfero/lasso-regression-with-pipelines-tutorial/edit)"],"metadata":{"id":"_6MzvhpTVk7d"}},{"cell_type":"code","source":["from sklearn.pipeline import make_pipeline\n","from sklearn.base import BaseEstimator, TransformerMixin\n","from sklearn.preprocessing import PowerTransformer, QuantileTransformer\n","import numpy as np\n","import pandas as pd\n","\n","from sklearn.impute import SimpleImputer\n","from sklearn.preprocessing import OneHotEncoder\n","from sklearn.pipeline import Pipeline\n","\n","import warnings\n","warnings.filterwarnings(\"ignore\")"],"metadata":{"id":"nrWdE-sM9a_h","executionInfo":{"status":"ok","timestamp":1680765183782,"user_tz":-180,"elapsed":1642,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["train = pd.read_csv('/content/drive/MyDrive/Datasets/PipeLine and CrossValidation/train.csv')\n","X_test = pd.read_csv('/content/drive/MyDrive/Datasets/PipeLine and CrossValidation/test.csv')\n","\n","X_test.iloc[:, 70:]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"_F0zBTzldsYZ","executionInfo":{"status":"ok","timestamp":1680765186748,"user_tz":-180,"elapsed":2968,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"1d55d2c4-0a84-4e5e-8e94-84fbaa18944c"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      ScreenPorch  PoolArea PoolQC  Fence MiscFeature  MiscVal  MoSold  \\\n","0             120         0    NaN  MnPrv         NaN        0       6   \n","1               0         0    NaN    NaN        Gar2    12500       6   \n","2               0         0    NaN  MnPrv         NaN        0       3   \n","3               0         0    NaN    NaN         NaN        0       6   \n","4             144         0    NaN    NaN         NaN        0       1   \n","...           ...       ...    ...    ...         ...      ...     ...   \n","1454            0         0    NaN    NaN         NaN        0       6   \n","1455            0         0    NaN    NaN         NaN        0       4   \n","1456            0         0    NaN    NaN         NaN        0       9   \n","1457            0         0    NaN  MnPrv        Shed      700       7   \n","1458            0         0    NaN    NaN         NaN        0      11   \n","\n","      YrSold SaleType SaleCondition  \n","0       2010       WD        Normal  \n","1       2010       WD        Normal  \n","2       2010       WD        Normal  \n","3       2010       WD        Normal  \n","4       2010       WD        Normal  \n","...      ...      ...           ...  \n","1454    2006       WD        Normal  \n","1455    2006       WD       Abnorml  \n","1456    2006       WD       Abnorml  \n","1457    2006       WD        Normal  \n","1458    2006       WD        Normal  \n","\n","[1459 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-256312f5-d021-4e25-8f06-2a625f36f8dc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ScreenPorch</th>\n","      <th>PoolArea</th>\n","      <th>PoolQC</th>\n","      <th>Fence</th>\n","      <th>MiscFeature</th>\n","      <th>MiscVal</th>\n","      <th>MoSold</th>\n","      <th>YrSold</th>\n","      <th>SaleType</th>\n","      <th>SaleCondition</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>120</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>MnPrv</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>2010</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Gar2</td>\n","      <td>12500</td>\n","      <td>6</td>\n","      <td>2010</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>MnPrv</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2010</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>2010</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>144</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2010</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1454</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>2006</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>1455</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>2006</td>\n","      <td>WD</td>\n","      <td>Abnorml</td>\n","    </tr>\n","    <tr>\n","      <th>1456</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>2006</td>\n","      <td>WD</td>\n","      <td>Abnorml</td>\n","    </tr>\n","    <tr>\n","      <th>1457</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>MnPrv</td>\n","      <td>Shed</td>\n","      <td>700</td>\n","      <td>7</td>\n","      <td>2006</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>1458</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>2006</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1459 rows Ã— 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-256312f5-d021-4e25-8f06-2a625f36f8dc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-256312f5-d021-4e25-8f06-2a625f36f8dc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-256312f5-d021-4e25-8f06-2a625f36f8dc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X = train.drop('SalePrice', axis=1)\n","y = train.SalePrice\n","\n","X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=.3, random_state=1121218)"],"metadata":{"id":"LhSSXofCgKfE","executionInfo":{"status":"ok","timestamp":1680765186748,"user_tz":-180,"elapsed":17,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# All categorical columns\n","object_cols = [col for col in X_train.columns if X_train[col].dtype == \"object\"]\n","\n","# Columns that can be safely label encoded\n","good_label_cols = [col for col in object_cols if \n","                   set(X_train[col]) == set(X_valid[col])]\n","        \n","# Problematic columns that will be dropped from the dataset\n","bad_label_cols = list(set(object_cols)-set(good_label_cols))\n","\n","# Drop categorical columns that will not be encoded\n","X_train = X_train.drop(bad_label_cols, axis=1)\n","X_valid = X_valid.drop(bad_label_cols, axis=1)"],"metadata":{"id":"glmmLp9BlcVl","executionInfo":{"status":"ok","timestamp":1680765186748,"user_tz":-180,"elapsed":17,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["X_train.describe().T.iloc[:10] # All numerical cols"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"IjEENUnPliJ4","executionInfo":{"status":"ok","timestamp":1680765186748,"user_tz":-180,"elapsed":17,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"e8e65a39-d3a5-4d1a-b2fa-e730a7c31b0a"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               count          mean          std     min     25%     50%  \\\n","Id            1022.0    728.628180   417.491868     1.0   374.5   734.5   \n","MSSubClass    1022.0     57.030333    42.861210    20.0    20.0    50.0   \n","LotFrontage    838.0     70.190931    24.110495    21.0    60.0    70.0   \n","LotArea       1022.0  10472.601761  8782.768055  1491.0  7560.0  9571.0   \n","OverallQual   1022.0      6.071429     1.374094     1.0     5.0     6.0   \n","OverallCond   1022.0      5.578278     1.101703     1.0     5.0     5.0   \n","YearBuilt     1022.0   1971.221135    29.863975  1875.0  1954.0  1973.0   \n","YearRemodAdd  1022.0   1984.813112    20.671520  1950.0  1966.0  1994.0   \n","MasVnrArea    1015.0    101.768473   180.299391     0.0     0.0     0.0   \n","BsmtFinSF1    1022.0    441.294521   438.430750     0.0     0.0   381.0   \n","\n","                   75%       max  \n","Id             1082.00    1459.0  \n","MSSubClass       70.00     190.0  \n","LotFrontage      80.00     313.0  \n","LotArea       11742.50  164660.0  \n","OverallQual       7.00      10.0  \n","OverallCond       6.00       9.0  \n","YearBuilt      2000.00    2009.0  \n","YearRemodAdd   2003.75    2010.0  \n","MasVnrArea      160.00    1600.0  \n","BsmtFinSF1      707.50    2260.0  "],"text/html":["\n","  <div id=\"df-269cf876-baf8-4014-994d-591366ecfbf1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Id</th>\n","      <td>1022.0</td>\n","      <td>728.628180</td>\n","      <td>417.491868</td>\n","      <td>1.0</td>\n","      <td>374.5</td>\n","      <td>734.5</td>\n","      <td>1082.00</td>\n","      <td>1459.0</td>\n","    </tr>\n","    <tr>\n","      <th>MSSubClass</th>\n","      <td>1022.0</td>\n","      <td>57.030333</td>\n","      <td>42.861210</td>\n","      <td>20.0</td>\n","      <td>20.0</td>\n","      <td>50.0</td>\n","      <td>70.00</td>\n","      <td>190.0</td>\n","    </tr>\n","    <tr>\n","      <th>LotFrontage</th>\n","      <td>838.0</td>\n","      <td>70.190931</td>\n","      <td>24.110495</td>\n","      <td>21.0</td>\n","      <td>60.0</td>\n","      <td>70.0</td>\n","      <td>80.00</td>\n","      <td>313.0</td>\n","    </tr>\n","    <tr>\n","      <th>LotArea</th>\n","      <td>1022.0</td>\n","      <td>10472.601761</td>\n","      <td>8782.768055</td>\n","      <td>1491.0</td>\n","      <td>7560.0</td>\n","      <td>9571.0</td>\n","      <td>11742.50</td>\n","      <td>164660.0</td>\n","    </tr>\n","    <tr>\n","      <th>OverallQual</th>\n","      <td>1022.0</td>\n","      <td>6.071429</td>\n","      <td>1.374094</td>\n","      <td>1.0</td>\n","      <td>5.0</td>\n","      <td>6.0</td>\n","      <td>7.00</td>\n","      <td>10.0</td>\n","    </tr>\n","    <tr>\n","      <th>OverallCond</th>\n","      <td>1022.0</td>\n","      <td>5.578278</td>\n","      <td>1.101703</td>\n","      <td>1.0</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>6.00</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>YearBuilt</th>\n","      <td>1022.0</td>\n","      <td>1971.221135</td>\n","      <td>29.863975</td>\n","      <td>1875.0</td>\n","      <td>1954.0</td>\n","      <td>1973.0</td>\n","      <td>2000.00</td>\n","      <td>2009.0</td>\n","    </tr>\n","    <tr>\n","      <th>YearRemodAdd</th>\n","      <td>1022.0</td>\n","      <td>1984.813112</td>\n","      <td>20.671520</td>\n","      <td>1950.0</td>\n","      <td>1966.0</td>\n","      <td>1994.0</td>\n","      <td>2003.75</td>\n","      <td>2010.0</td>\n","    </tr>\n","    <tr>\n","      <th>MasVnrArea</th>\n","      <td>1015.0</td>\n","      <td>101.768473</td>\n","      <td>180.299391</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>160.00</td>\n","      <td>1600.0</td>\n","    </tr>\n","    <tr>\n","      <th>BsmtFinSF1</th>\n","      <td>1022.0</td>\n","      <td>441.294521</td>\n","      <td>438.430750</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>381.0</td>\n","      <td>707.50</td>\n","      <td>2260.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-269cf876-baf8-4014-994d-591366ecfbf1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-269cf876-baf8-4014-994d-591366ecfbf1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-269cf876-baf8-4014-994d-591366ecfbf1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["X_train.describe(include=np.object).T.iloc[:10] # All object cols"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"_nzWwP8hliMc","executionInfo":{"status":"ok","timestamp":1680765186748,"user_tz":-180,"elapsed":16,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"b690e37f-d031-4833-988f-1b1538f0b3fa"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             count unique     top  freq\n","MSZoning      1022      5      RL   809\n","Street        1022      2    Pave  1017\n","Alley           67      2    Grvl    37\n","LotShape      1022      4     Reg   654\n","LandContour   1022      4     Lvl   920\n","LandSlope     1022      3     Gtl   966\n","Neighborhood  1022     25   NAmes   156\n","BldgType      1022      5    1Fam   850\n","HouseStyle    1022      8  1Story   514\n","MasVnrType    1015      4    None   615"],"text/html":["\n","  <div id=\"df-f3f86a36-af72-4a7b-b53e-cde8479b004a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>unique</th>\n","      <th>top</th>\n","      <th>freq</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>MSZoning</th>\n","      <td>1022</td>\n","      <td>5</td>\n","      <td>RL</td>\n","      <td>809</td>\n","    </tr>\n","    <tr>\n","      <th>Street</th>\n","      <td>1022</td>\n","      <td>2</td>\n","      <td>Pave</td>\n","      <td>1017</td>\n","    </tr>\n","    <tr>\n","      <th>Alley</th>\n","      <td>67</td>\n","      <td>2</td>\n","      <td>Grvl</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>LotShape</th>\n","      <td>1022</td>\n","      <td>4</td>\n","      <td>Reg</td>\n","      <td>654</td>\n","    </tr>\n","    <tr>\n","      <th>LandContour</th>\n","      <td>1022</td>\n","      <td>4</td>\n","      <td>Lvl</td>\n","      <td>920</td>\n","    </tr>\n","    <tr>\n","      <th>LandSlope</th>\n","      <td>1022</td>\n","      <td>3</td>\n","      <td>Gtl</td>\n","      <td>966</td>\n","    </tr>\n","    <tr>\n","      <th>Neighborhood</th>\n","      <td>1022</td>\n","      <td>25</td>\n","      <td>NAmes</td>\n","      <td>156</td>\n","    </tr>\n","    <tr>\n","      <th>BldgType</th>\n","      <td>1022</td>\n","      <td>5</td>\n","      <td>1Fam</td>\n","      <td>850</td>\n","    </tr>\n","    <tr>\n","      <th>HouseStyle</th>\n","      <td>1022</td>\n","      <td>8</td>\n","      <td>1Story</td>\n","      <td>514</td>\n","    </tr>\n","    <tr>\n","      <th>MasVnrType</th>\n","      <td>1015</td>\n","      <td>4</td>\n","      <td>None</td>\n","      <td>615</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3f86a36-af72-4a7b-b53e-cde8479b004a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f3f86a36-af72-4a7b-b53e-cde8479b004a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f3f86a36-af72-4a7b-b53e-cde8479b004a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["above_0_missing = X_train.isnull().sum() > 0\n","\n","X_train.isnull().sum()[above_0_missing]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gfFOqr75liPI","executionInfo":{"status":"ok","timestamp":1680765186749,"user_tz":-180,"elapsed":17,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"2397f545-f93d-4227-dd55-fa8657132d3d"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LotFrontage     184\n","Alley           955\n","MasVnrType        7\n","MasVnrArea        7\n","BsmtQual         30\n","BsmtCond         30\n","BsmtExposure     31\n","BsmtFinType1     30\n","BsmtFinType2     31\n","FireplaceQu     480\n","GarageType       58\n","GarageYrBlt      58\n","GarageFinish     58\n","Fence           821\n","dtype: int64"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["numerical_features = X_train.select_dtypes(include='number').columns.tolist()\n","print(f'There are {len(numerical_features)} numerical features:', '\\n')\n","print(numerical_features)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ss9Ri1MtliRy","executionInfo":{"status":"ok","timestamp":1680765186749,"user_tz":-180,"elapsed":15,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"986ea78b-d3b6-44f9-a9a7-ac076a0e354c"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["There are 37 numerical features: \n","\n","['Id', 'MSSubClass', 'LotFrontage', 'LotArea', 'OverallQual', 'OverallCond', 'YearBuilt', 'YearRemodAdd', 'MasVnrArea', 'BsmtFinSF1', 'BsmtFinSF2', 'BsmtUnfSF', 'TotalBsmtSF', '1stFlrSF', '2ndFlrSF', 'LowQualFinSF', 'GrLivArea', 'BsmtFullBath', 'BsmtHalfBath', 'FullBath', 'HalfBath', 'BedroomAbvGr', 'KitchenAbvGr', 'TotRmsAbvGrd', 'Fireplaces', 'GarageYrBlt', 'GarageCars', 'GarageArea', 'WoodDeckSF', 'OpenPorchSF', 'EnclosedPorch', '3SsnPorch', 'ScreenPorch', 'PoolArea', 'MiscVal', 'MoSold', 'YrSold']\n"]}]},{"cell_type":"code","source":["categorical_features = X_train.select_dtypes(exclude='number').columns.tolist()\n","print(f'There are {len(categorical_features)} categorical features:', '\\n')\n","print(categorical_features)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Fujn6xCRliUb","executionInfo":{"status":"ok","timestamp":1680765186749,"user_tz":-180,"elapsed":14,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"6ccc61b4-ae68-4ec1-81e0-338da97092da"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["There are 24 categorical features: \n","\n","['MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'LandSlope', 'Neighborhood', 'BldgType', 'HouseStyle', 'MasVnrType', 'ExterQual', 'BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1', 'BsmtFinType2', 'CentralAir', 'KitchenQual', 'FireplaceQu', 'GarageType', 'GarageFinish', 'PavedDrive', 'Fence', 'SaleCondition']\n"]}]},{"cell_type":"code","source":["from sklearn.impute import SimpleImputer\n","from sklearn.preprocessing import OneHotEncoder, MinMaxScaler\n","from sklearn.pipeline import Pipeline"],"metadata":{"id":"mI-y92PzliWo","executionInfo":{"status":"ok","timestamp":1680765186749,"user_tz":-180,"elapsed":13,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["numeric_pipeline = Pipeline(steps=[\n","    ('impute', SimpleImputer(strategy='mean')),\n","    ('scale', MinMaxScaler())\n","])\n","\n","categorical_pipeline = Pipeline(steps=[\n","    ('impute', SimpleImputer(strategy='most_frequent')),\n","    ('one-hot', OneHotEncoder(handle_unknown='ignore', sparse=False))\n","])"],"metadata":{"id":"fasRwkPJliZL","executionInfo":{"status":"ok","timestamp":1680765186749,"user_tz":-180,"elapsed":13,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["categorical_pipeline"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":126},"id":"rmyL0Reumfl_","executionInfo":{"status":"ok","timestamp":1680765186750,"user_tz":-180,"elapsed":14,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"23f9eefb-419a-4c2d-9f58-70fe3db88567"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pipeline(steps=[('impute', SimpleImputer(strategy='most_frequent')),\n","                ('one-hot',\n","                 OneHotEncoder(handle_unknown='ignore', sparse=False))])"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;impute&#x27;, SimpleImputer(strategy=&#x27;most_frequent&#x27;)),\n","                (&#x27;one-hot&#x27;,\n","                 OneHotEncoder(handle_unknown=&#x27;ignore&#x27;, sparse=False))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;impute&#x27;, SimpleImputer(strategy=&#x27;most_frequent&#x27;)),\n","                (&#x27;one-hot&#x27;,\n","                 OneHotEncoder(handle_unknown=&#x27;ignore&#x27;, sparse=False))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SimpleImputer</label><div class=\"sk-toggleable__content\"><pre>SimpleImputer(strategy=&#x27;most_frequent&#x27;)</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">OneHotEncoder</label><div class=\"sk-toggleable__content\"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;, sparse=False)</pre></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["numeric_pipeline.fit_transform(X_train.select_dtypes(include='number'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OcePQQz2mfpE","executionInfo":{"status":"ok","timestamp":1680765186750,"user_tz":-180,"elapsed":13,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"c3bece8f-7af2-432c-dd37-70ffdbc7ff7e"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.49451303, 0.58823529, 0.16846209, ..., 0.        , 0.36363636,\n","        1.        ],\n","       [0.63443073, 0.        , 0.16846209, ..., 0.        , 0.18181818,\n","        0.5       ],\n","       [0.53017833, 0.        , 0.16780822, ..., 0.        , 0.54545455,\n","        0.25      ],\n","       ...,\n","       [0.97325103, 0.        , 0.16846209, ..., 0.        , 1.        ,\n","        0.        ],\n","       [0.98902606, 0.23529412, 0.21917808, ..., 0.        , 0.27272727,\n","        0.75      ],\n","       [0.50685871, 0.23529412, 0.15068493, ..., 0.        , 0.27272727,\n","        0.75      ]])"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["from sklearn.compose import ColumnTransformer\n","\n","full_processor = ColumnTransformer(transformers=[\n","    ('number', numeric_pipeline, numerical_features),\n","    ('category', categorical_pipeline, categorical_features)\n","])"],"metadata":{"id":"pqjtVa5Pmfr6","executionInfo":{"status":"ok","timestamp":1680765186750,"user_tz":-180,"elapsed":12,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["full_processor.fit_transform(X_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UGJ5PxEtmfuL","executionInfo":{"status":"ok","timestamp":1680765186750,"user_tz":-180,"elapsed":12,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"2b5658ab-024a-4cc6-9c26-4340c172cf4a"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.49451303, 0.58823529, 0.16846209, ..., 0.        , 1.        ,\n","        0.        ],\n","       [0.63443073, 0.        , 0.16846209, ..., 0.        , 0.        ,\n","        0.        ],\n","       [0.53017833, 0.        , 0.16780822, ..., 0.        , 1.        ,\n","        0.        ],\n","       ...,\n","       [0.97325103, 0.        , 0.16846209, ..., 0.        , 1.        ,\n","        0.        ],\n","       [0.98902606, 0.23529412, 0.21917808, ..., 0.        , 1.        ,\n","        0.        ],\n","       [0.50685871, 0.23529412, 0.15068493, ..., 0.        , 1.        ,\n","        0.        ]])"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["from sklearn.linear_model import Lasso\n","from sklearn.metrics import mean_absolute_error\n","\n","lasso = Lasso(alpha=0.1)\n","\n","lasso_pipeline = Pipeline(steps=[\n","    ('preprocess', full_processor),\n","    ('model', lasso)\n","])"],"metadata":{"id":"499-2Oilmfwi","executionInfo":{"status":"ok","timestamp":1680765186750,"user_tz":-180,"elapsed":11,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["_ = lasso_pipeline.fit(X_train, y_train)"],"metadata":{"id":"7txzFAkBmfzT","executionInfo":{"status":"ok","timestamp":1680765186751,"user_tz":-180,"elapsed":12,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["preds = lasso_pipeline.predict(X_valid)\n","mean_absolute_error(y_valid, preds)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wq4em_lhT1ah","executionInfo":{"status":"ok","timestamp":1680765186751,"user_tz":-180,"elapsed":12,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"5b20db26-b0ca-409c-ecdf-276c4e4b8ba1"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["19595.997398558986"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["lasso_pipeline.score(X_valid, y_valid)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P30NJ080T1d3","executionInfo":{"status":"ok","timestamp":1680765187199,"user_tz":-180,"elapsed":458,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"848af377-bca2-46a4-d2ad-c78a3d988f84"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7946935540535637"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["from sklearn.model_selection import GridSearchCV\n","\n","param_dict = {'model__alpha': np.arange(0, 1, 0.05)}\n","\n","search = GridSearchCV(lasso_pipeline, param_dict, \n","                      cv=10, \n","                      scoring='neg_mean_absolute_error')\n","\n","_ = search.fit(X_train, y_train)"],"metadata":{"id":"K1uxksteT1gK","executionInfo":{"status":"ok","timestamp":1680765267141,"user_tz":-180,"elapsed":79944,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["print('Best score:', abs(search.best_score_))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9m4BRyBgULdN","executionInfo":{"status":"ok","timestamp":1680765267142,"user_tz":-180,"elapsed":16,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"04d23699-aff9-4de7-9f4c-8121c83e7e62"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Best score: 18074.367574589844\n"]}]},{"cell_type":"code","source":["print('Best alpha:', search.best_params_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z4zgXejRULfm","executionInfo":{"status":"ok","timestamp":1680765267142,"user_tz":-180,"elapsed":13,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"e6eb0b2b-91a6-4047-c3f8-cfbe089822d1"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Best alpha: {'model__alpha': 0.9500000000000001}\n"]}]},{"cell_type":"code","source":["param_dict = {'model__alpha': np.arange(1, 200, 5)}\n","\n","search = GridSearchCV(lasso_pipeline, param_dict, \n","                      cv=10, \n","                      scoring='neg_mean_absolute_error')\n","\n","_ = search.fit(X_train, y_train)"],"metadata":{"id":"FmBjTGIHULh_","executionInfo":{"status":"ok","timestamp":1680765331039,"user_tz":-180,"elapsed":63908,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["print('Best score:', abs(search.best_score_))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AouEaL9MULkV","executionInfo":{"status":"ok","timestamp":1680765331039,"user_tz":-180,"elapsed":14,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"0fd72d17-2c7e-4cf9-d5a5-753cd29c72c8"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Best score: 17070.552604208682\n"]}]},{"cell_type":"code","source":["print('Best alpha:', search.best_params_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IxDdRrCFU910","executionInfo":{"status":"ok","timestamp":1680765331040,"user_tz":-180,"elapsed":14,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"55138371-31d5-4fe1-a52e-e1dbc4a69e9a"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Best alpha: {'model__alpha': 181}\n"]}]},{"cell_type":"code","source":["lasso = Lasso(alpha=181)\n","\n","final_lasso_pipe = Pipeline(steps=[\n","    ('preprocess', full_processor),\n","    ('model', lasso)\n","])"],"metadata":{"id":"FpWumryoU_mm","executionInfo":{"status":"ok","timestamp":1680765331040,"user_tz":-180,"elapsed":12,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["_ = final_lasso_pipe.fit(X_train, y_train)\n","preds = final_lasso_pipe.predict(X_valid)\n","\n","mean_absolute_error(y_valid, preds)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ch2XbhQ6VBYG","executionInfo":{"status":"ok","timestamp":1680765331041,"user_tz":-180,"elapsed":13,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"6a950daa-7a39-490c-d322-67b40ea40d51"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["18291.92024407007"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["final_lasso_pipe.score(X_valid, y_valid)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4FzVHjjEVVAI","executionInfo":{"status":"ok","timestamp":1680765331041,"user_tz":-180,"elapsed":12,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"ff55c76e-5ade-4cdd-89b2-6d34b615d35e"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8131131130693151"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":[],"metadata":{"id":"DkTqtM-CMUQ5","executionInfo":{"status":"ok","timestamp":1680765331041,"user_tz":-180,"elapsed":11,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}}},"execution_count":28,"outputs":[]},{"cell_type":"markdown","source":["#Custom Model for SkLearn and use it in PipeLines\n","\n","[habr](https://habr.com/ru/company/skillfactory/blog/675876/)"],"metadata":{"id":"Sl59HzpuVg9B"}},{"cell_type":"code","source":["tps_df = pd.read_csv(\"/content/drive/MyDrive/Datasets/tabular-playground-series-sep-2021/train.csv\")\n","tps_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"1qkKf477OLyB","executionInfo":{"status":"ok","timestamp":1680765354674,"user_tz":-180,"elapsed":23644,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"036f8f4c-821a-4c15-840e-c873e0a445b3"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id       f1        f2         f3        f4       f5        f6       f7  \\\n","0   0  0.10859  0.004314    -37.566  0.017364  0.28915 -10.25100   135.12   \n","1   1  0.10090  0.299610  11822.000  0.276500  0.45970  -0.83733  1721.90   \n","2   2  0.17803 -0.006980    907.270  0.272140  0.45948   0.17327  2298.00   \n","3   3  0.15236  0.007259    780.100  0.025179  0.51947   7.49140   112.51   \n","4   4  0.11623  0.502900   -109.150  0.297910  0.34490  -0.40932  2538.90   \n","\n","         f8            f9  ...     f110    f111     f112      f113      f114  \\\n","0  168900.0  3.992400e+14  ... -12.2280  1.7482  1.90960  -7.11570   4378.80   \n","1  119810.0  3.874100e+15  ... -56.7580  4.1684  0.34808   4.14200    913.23   \n","2  360650.0  1.224500e+13  ...  -5.7688  1.2042  0.26290   8.13120  45119.00   \n","3  259490.0  7.781400e+13  ... -34.8580  2.0694  0.79631 -16.33600   4952.40   \n","4   65332.0  1.907200e+15  ... -13.6410  1.5298  1.14640  -0.43124   3856.50   \n","\n","     f115          f116    f117     f118  claim  \n","0  1.2096  8.613400e+14   140.1  1.01770      1  \n","1  1.2464  7.575100e+15  1861.0  0.28359      0  \n","2  1.1764  3.218100e+14  3838.2  0.40690      1  \n","3  1.1784  4.533000e+12  4889.1  0.51486      1  \n","4  1.4830 -8.991300e+12     NaN  0.23049      1  \n","\n","[5 rows x 120 columns]"],"text/html":["\n","  <div id=\"df-aec1bd6f-1977-4efb-b118-faaaba713a4d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>f1</th>\n","      <th>f2</th>\n","      <th>f3</th>\n","      <th>f4</th>\n","      <th>f5</th>\n","      <th>f6</th>\n","      <th>f7</th>\n","      <th>f8</th>\n","      <th>f9</th>\n","      <th>...</th>\n","      <th>f110</th>\n","      <th>f111</th>\n","      <th>f112</th>\n","      <th>f113</th>\n","      <th>f114</th>\n","      <th>f115</th>\n","      <th>f116</th>\n","      <th>f117</th>\n","      <th>f118</th>\n","      <th>claim</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.10859</td>\n","      <td>0.004314</td>\n","      <td>-37.566</td>\n","      <td>0.017364</td>\n","      <td>0.28915</td>\n","      <td>-10.25100</td>\n","      <td>135.12</td>\n","      <td>168900.0</td>\n","      <td>3.992400e+14</td>\n","      <td>...</td>\n","      <td>-12.2280</td>\n","      <td>1.7482</td>\n","      <td>1.90960</td>\n","      <td>-7.11570</td>\n","      <td>4378.80</td>\n","      <td>1.2096</td>\n","      <td>8.613400e+14</td>\n","      <td>140.1</td>\n","      <td>1.01770</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.10090</td>\n","      <td>0.299610</td>\n","      <td>11822.000</td>\n","      <td>0.276500</td>\n","      <td>0.45970</td>\n","      <td>-0.83733</td>\n","      <td>1721.90</td>\n","      <td>119810.0</td>\n","      <td>3.874100e+15</td>\n","      <td>...</td>\n","      <td>-56.7580</td>\n","      <td>4.1684</td>\n","      <td>0.34808</td>\n","      <td>4.14200</td>\n","      <td>913.23</td>\n","      <td>1.2464</td>\n","      <td>7.575100e+15</td>\n","      <td>1861.0</td>\n","      <td>0.28359</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0.17803</td>\n","      <td>-0.006980</td>\n","      <td>907.270</td>\n","      <td>0.272140</td>\n","      <td>0.45948</td>\n","      <td>0.17327</td>\n","      <td>2298.00</td>\n","      <td>360650.0</td>\n","      <td>1.224500e+13</td>\n","      <td>...</td>\n","      <td>-5.7688</td>\n","      <td>1.2042</td>\n","      <td>0.26290</td>\n","      <td>8.13120</td>\n","      <td>45119.00</td>\n","      <td>1.1764</td>\n","      <td>3.218100e+14</td>\n","      <td>3838.2</td>\n","      <td>0.40690</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>0.15236</td>\n","      <td>0.007259</td>\n","      <td>780.100</td>\n","      <td>0.025179</td>\n","      <td>0.51947</td>\n","      <td>7.49140</td>\n","      <td>112.51</td>\n","      <td>259490.0</td>\n","      <td>7.781400e+13</td>\n","      <td>...</td>\n","      <td>-34.8580</td>\n","      <td>2.0694</td>\n","      <td>0.79631</td>\n","      <td>-16.33600</td>\n","      <td>4952.40</td>\n","      <td>1.1784</td>\n","      <td>4.533000e+12</td>\n","      <td>4889.1</td>\n","      <td>0.51486</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>0.11623</td>\n","      <td>0.502900</td>\n","      <td>-109.150</td>\n","      <td>0.297910</td>\n","      <td>0.34490</td>\n","      <td>-0.40932</td>\n","      <td>2538.90</td>\n","      <td>65332.0</td>\n","      <td>1.907200e+15</td>\n","      <td>...</td>\n","      <td>-13.6410</td>\n","      <td>1.5298</td>\n","      <td>1.14640</td>\n","      <td>-0.43124</td>\n","      <td>3856.50</td>\n","      <td>1.4830</td>\n","      <td>-8.991300e+12</td>\n","      <td>NaN</td>\n","      <td>0.23049</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 120 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aec1bd6f-1977-4efb-b118-faaaba713a4d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-aec1bd6f-1977-4efb-b118-faaaba713a4d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-aec1bd6f-1977-4efb-b118-faaaba713a4d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["print('values and feateres shape', tps_df.shape)\n","\n","\n","# Find the number of missing values across rows\n","print('NaN values:\\n', tps_df.isnull().sum(axis=1).sum())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EP1JLX21Nkb5","executionInfo":{"status":"ok","timestamp":1680765354674,"user_tz":-180,"elapsed":7,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"2618fa30-0083-48b6-bd48-b63e715a09b4"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["values and feateres shape (957919, 120)\n","NaN values:\n"," 1820782\n"]}]},{"cell_type":"markdown","source":["## FunctionTransformer\n","\n","[Documentation](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.FunctionTransformer.html)"],"metadata":{"id":"FH3QRQpiUXJB"}},{"cell_type":"code","source":["def num_missing_row(X: pd.DataFrame, y=None):\n","    # Calculate some metrics across rows\n","    num_missing = X.isnull().sum(axis=1)\n","    num_missing_std = X.isnull().std(axis=1)\n","\n","    # Add the above series as a new feature to the df\n","    X[\"#missing\"] = num_missing\n","    X[\"num_missing_std\"] = num_missing_std\n","\n","    return X"],"metadata":{"id":"_BkikfyCNkeQ","executionInfo":{"status":"ok","timestamp":1680765354674,"user_tz":-180,"elapsed":5,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import FunctionTransformer\n","\n","num_missing_estimator = FunctionTransformer(num_missing_row)"],"metadata":{"id":"Y8O2tWGiNkgq","executionInfo":{"status":"ok","timestamp":1680765354674,"user_tz":-180,"elapsed":5,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["# Check number of columns before\n","print(f\"Number of features before preprocessing: {len(tps_df.columns)}\")\n","\n","# Apply the custom estimator\n","tps_df = num_missing_estimator.transform(tps_df)\n","print(f\"Number of features after preprocessing: {len(tps_df.columns)}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P2rxfP5iNkjA","executionInfo":{"status":"ok","timestamp":1680765355531,"user_tz":-180,"elapsed":861,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"f1cbc25c-43d7-472b-b122-fa49177f6186"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of features before preprocessing: 120\n","Number of features after preprocessing: 122\n"]}]},{"cell_type":"markdown","source":["### Pattern"],"metadata":{"id":"waYNSwYdUoV6"}},{"cell_type":"code","source":["# The first argument is Data!\n","def custom_function(X, y=None):\n","    ...\n","\n","# We can add iverse function to transformer\n","def inverse_of_custom(X, y=None):\n","    ...\n","\n","estimator = FunctionTransformer(func=custom_function, inverse_func=inverse_of_custom)\n"],"metadata":{"id":"di0EZU_gNkla","executionInfo":{"status":"ok","timestamp":1680765355531,"user_tz":-180,"elapsed":2,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}}},"execution_count":34,"outputs":[]},{"cell_type":"markdown","source":["## CustomTransformer"],"metadata":{"id":"-yEOMz8AVblZ"}},{"cell_type":"code","source":["class CustomPowerTransformer(BaseEstimator, TransformerMixin):\n","    \"\"\"This class adds \"1\" to the data and use PowerTransformer.\n","    If we don't do it, we can get the bug if at least one value of data was zero.\"\"\"\n","    def __init__(self):\n","        self._estimator = PowerTransformer()\n","\n","    def fit(self, X, y=None):\n","        X_copy = np.copy(X) + 1\n","        self._estimator.fit(X_copy)\n","\n","        return self\n","\n","    def transform(self, X):\n","        X_copy = np.copy(X) + 1\n","\n","        return self._estimator.transform(X_copy)\n","\n","    def inverse_transform(self, X):\n","        X_reversed = self._estimator.inverse_transform(np.copy(X))\n","\n","        return X_reversed - 1"],"metadata":{"id":"8gmyFMGwNkn2","executionInfo":{"status":"ok","timestamp":1680765355531,"user_tz":-180,"elapsed":2,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}}},"execution_count":35,"outputs":[]},{"cell_type":"markdown","source":["### Result"],"metadata":{"id":"ULjbHMeVYurd"}},{"cell_type":"code","source":["from sklearn.metrics import roc_auc_score\n","from sklearn.model_selection import train_test_split\n","from sklearn.pipeline import make_pipeline\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.impute import SimpleImputer\n","import xgboost as xgb\n","\n","xgb_pipe = make_pipeline(\n","    FunctionTransformer(num_missing_row),\n","    SimpleImputer(strategy=\"constant\", fill_value=-99999),\n","    CustomPowerTransformer(),\n","    xgb.XGBClassifier(\n","        n_estimators=1000, tree_method=\"gpu_hist\", objective=\"binary:logistic\"\n","    ),\n",")\n","\n","X, y = tps_df.drop(\"claim\", axis=1), tps_df[[\"claim\"]].values.flatten()\n","split = train_test_split(X, y, test_size=0.33, random_state=1121218)\n","X_train, X_test, y_train, y_test = split\n","xgb_pipe.fit(X_train, y_train)\n","preds = xgb_pipe.predict_proba(X_test)\n","\n","roc_auc_score(y_test, preds[:, 1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MzS0kwbsNkqT","executionInfo":{"status":"ok","timestamp":1680765488471,"user_tz":-180,"elapsed":132941,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"6b745562-95f7-42dc-cc47-b4e43122045d"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7986947630947118"]},"metadata":{},"execution_count":36}]},{"cell_type":"markdown","source":["### Pattern"],"metadata":{"id":"f0IjcG7oZImh"}},{"cell_type":"code","source":["class MyTransformer(BaseEstimator, TransformerMixin):\n","  def __init__(self):\n","    pass\n","  \n","  def fit(self):\n","\n","    return self\n","  \n","  def transform(self):\n","    pass\n","  \n","  def inverse_tarnsform(self):\n","    pass"],"metadata":{"id":"ot4N_Ykimhn5","executionInfo":{"status":"ok","timestamp":1680765488471,"user_tz":-180,"elapsed":16,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}}},"execution_count":37,"outputs":[]},{"cell_type":"markdown","source":["#OneHotEncoder"],"metadata":{"id":"pnSgSZ90JOC4"}},{"cell_type":"code","source":["X = np.array([[\"a\"] * 5 + [\"b\"] * 20 + [\"c\"] * 10 + [\"d\"] * 3], dtype=object).T\n","\n","ohe = OneHotEncoder(max_categories=4, sparse_output=False).fit(X)\n","print('Our column:\\n', np.array([[\"a\"], [\"c\"]]))\n","print('\\nResulf for \"a\", \"b\", \"c\", \"d\" categories:')\n","ohe.transform([[\"a\"], [\"c\"]])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4SHEEFTDzxfy","executionInfo":{"status":"ok","timestamp":1680765488471,"user_tz":-180,"elapsed":13,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"309829a7-1643-4350-b7c0-cf1d8e2f966f"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["Our column:\n"," [['a']\n"," ['c']]\n","\n","Resulf for \"a\", \"b\", \"c\", \"d\" categories:\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[1., 0., 0., 0.],\n","       [0., 0., 1., 0.]])"]},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","source":["# PowerTransformer"],"metadata":{"id":"tY03Ntg6X3CI"}},{"cell_type":"code","source":["# demonstration of the power transform on data with a skew\n","from numpy import exp\n","from numpy.random import randn\n","from sklearn.preprocessing import PowerTransformer\n","import matplotlib.pyplot as plt \n","\n","# generate gaussian data sample\n","data = randn(1000)\n","\n","\n","\n","# add a skew to the data distribution\n","data = exp(data)\n","\n","# histogram of the raw data with a skew\n","fig, ax = plt.subplots()\n","ax.set_title(\"'Original'\")\n","ax.hist(data, bins=25)\n","plt.show()\n","\n","\n","\n","# reshape data to have rows and columns\n","data = data.reshape((len(data),1))\n","\n","# power transform the raw data\n","power = PowerTransformer(method='yeo-johnson', standardize=True)\n","data_trans = power.fit_transform(data)\n","\n","# histogram of the transformed data\n","fig1, ax1 = plt.subplots()\n","ax1.hist(data_trans, bins=25)\n","ax1.set_title(\"Transformed\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":887},"id":"1t59GWIIJgC9","executionInfo":{"status":"ok","timestamp":1680769254440,"user_tz":-180,"elapsed":783,"user":{"displayName":"RedBlackWhite","userId":"07958115215970198073"}},"outputId":"4a31899a-f33a-4d84-d144-b5f494e8e189"},"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAh8AAAGzCAYAAACPa3XZAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAjWElEQVR4nO3de3BU9f3/8dcGyIWE3ZAICYEEglIBuajhFkC5GI0RGZBwUWEEhiLaAELsCHGQW5WgWKFiuI4FcWRQqqCgQmm4TWvCJRQvICkolwhkuWgSiCWhZH9/9Od+uyZcNtl8Nps8HzM7w37O2bPvdOvw5OTsrsXhcDgEAABgiJ+3BwAAAHUL8QEAAIwiPgAAgFHEBwAAMIr4AAAARhEfAADAKOIDAAAYRXwAAACjiA8AAGAU8QGg2uzbt089e/ZUcHCwLBaLDh486O2RPGL16tWyWCw6ceKEt0cBfFJ9bw8A4OYsFsst7bdjxw717du3eoe5RVevXtWwYcMUGBiohQsXqmHDhmrZsqW3xwJQAxAfgA949913Xe6vWbNG27ZtK7ferl07k2Pd0HfffaeTJ09q5cqV+u1vf+vtcQDUIMQH4ANGjRrlcj87O1vbtm0rt/5rP//8sxo2bFido13XuXPnJEmhoaEeO2ZxcbGCg4M9djwA3sE1H0At0bdvX3Xo0EE5OTm6//771bBhQ7344ouSpI8//lgDBgxQVFSUAgICdPvtt+sPf/iDrl27VuExDh8+rH79+qlhw4Zq3ry5XnvttXLPt3jxYt11111q2LChGjdurC5dumjt2rWSpDFjxqhPnz6SpGHDhslisbj8Omj79u267777FBwcrNDQUA0aNEjffvuty/Fnz54ti8Wiw4cP68knn1Tjxo3Vu3dvSVKrVq306KOPaufOnerSpYuCgoLUsWNH7dy5U5L00UcfqWPHjgoMDFRcXJz++c9/lpv/yJEjGjp0qMLCwhQYGKguXbrok08+KbffoUOH1L9/fwUFBalFixZ6+eWXVVZWdouvCoCKcOYDqEUuXryopKQkPf744xo1apQiIiIk/fcCyZCQEKWmpiokJETbt2/XzJkzVVRUpAULFrgc46efftLDDz+sIUOGaPjw4frLX/6iadOmqWPHjkpKSpIkrVy5UpMnT9bQoUP13HPP6cqVK/rqq6+0Z88ePfnkk5owYYKaN2+uefPmafLkyeratatzlr/97W9KSkpS69atNXv2bP373//W4sWL1atXLx04cECtWrVymWfYsGFq06aN5s2bJ4fD4Vw/duyY87lGjRql119/XQMHDtSyZcv04osv6ne/+50kKT09XcOHD1dubq78/P77761Dhw6pV69eat68uaZPn67g4GB98MEHGjx4sD788EM99thjkqT8/Hz169dP//nPf5z7rVixQkFBQZ5/8YC6xAHA56SkpDh+/Z9vnz59HJIcy5YtK7f/zz//XG5twoQJjoYNGzquXLlS7hhr1qxxrpWUlDgiIyMdycnJzrVBgwY57rrrrhvOuGPHDockx/r1613W7777bkfTpk0dFy9edK59+eWXDj8/P8dTTz3lXJs1a5ZDkuOJJ54od+yWLVs6JDm++OIL59rWrVsdkhxBQUGOkydPOteXL1/ukOTYsWOHc+2BBx5wdOzY0eVnLysrc/Ts2dPRpk0b59qUKVMckhx79uxxrp07d85hs9kckhzHjx+/4f8GACrGr12AWiQgIEBjx44tt/6//1K/dOmSLly4oPvuu08///yzjhw54rJvSEiIy7Uk/v7+6tatm77//nvnWmhoqH744Qft27fPrfnOnj2rgwcPasyYMQoLC3Oud+rUSQ8++KA+++yzco955plnKjxW+/btFR8f77zfvXt3SVL//v0VExNTbv2X+X/88Udt375dw4cPd/5vceHCBV28eFGJiYk6evSoTp8+LUn67LPP1KNHD3Xr1s15vCZNmmjkyJFu/dwAXBEfQC3SvHlz+fv7l1s/dOiQHnvsMdlsNlmtVjVp0sQZGIWFhS77tmjRotxbexs3bqyffvrJeX/atGkKCQlRt27d1KZNG6WkpOgf//jHTec7efKkJOnOO+8st61du3a6cOGCiouLXdZjY2MrPNb/BoYk2Ww2SVJ0dHSF67/Mf+zYMTkcDr300ktq0qSJy23WrFmS/u9i2ZMnT6pNmzblnrui+QHcOq75AGqRiq5FKCgoUJ8+fWS1WjV37lzdfvvtCgwM1IEDBzRt2rRyF0/Wq1evwmM7/ud6i3bt2ik3N1ebN2/Wli1b9OGHH2rJkiWaOXOm5syZU+0/043mvNn8v/y8v//975WYmFjhvnfccYe7YwJwA/EB1HI7d+7UxYsX9dFHH+n+++93rh8/frxKxw0ODtaIESM0YsQI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\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"4nSIej2qpalH"},"execution_count":null,"outputs":[]}]}